#include "post.h"
#include "get.h"
#include "js0n.h"


#include <curl/curl.h>
#include <iostream>
#include <cstring>
#include "json.h"



char *writer(char *data, size_t size, size_t nmemb, std::string *buffer)
{
  int result = 0;
  if(buffer != NULL) 
    {
      buffer -> append(data, size * nmemb);
      result = size * nmemb;
    }
  return 0;
} 

std::string get_scores(const std::string lid,const std::string scope)
{
  struct json_object *new_obj;
  CURLcode res;
  CURL* curl_handle = curl_easy_init();
  int i;
  const char *curl_get;
  if (curl_handle)
    {  
      std::string buffer;
      std::string url;
      char *buffer1;
      url = "http://api2.mogade.com/api/gamma/scores?lid=" + lid +"&scope=" + scope;
      curl_get = strdup(url.c_str());
      curl_easy_setopt(curl_handle, CURLOPT_URL, curl_get);
      curl_easy_setopt(curl_handle, CURLOPT_WRITEFUNCTION, writer);
      curl_easy_setopt(curl_handle, CURLOPT_WRITEDATA, &buffer );
      res = curl_easy_perform(curl_handle);
      curl_easy_cleanup(curl_handle);
      return buffer;
   } 
}

struct json_object *get_json(std::string curl_score)
{
  struct json_object *json_obj;
  MC_SET_DEBUG(1);
  json_obj = json_tokener_parse(curl_score.c_str());
  //json_object_put(new_obj);
  return json_obj;
}

/*
  lid = id of leaderboards
  username = nick of gamer
  userkey = player identification device
  points = points of gamer
  key = id of game
  secret = secret of game on mogade
  data = data of user, define a level, dificulty etc....
*/

std::string set_score(std::string lid, std::string username, std::string userkey, std::string key, std::string secret, std::string points, std::string data ) 
{
  CURL *curl;
  CURLcode res;
  curl = curl_easy_init();
  if(curl)
    {
      std::string str_post;
      
      str_post = "lid="+lid+"&username="+username+"&userkey="+userkey+"&points="+points+"&data="+data+"&key="+key+"&sig="+"sig";
      //char str_post[250] = "lid=";
      //strcat(str_post,lid);
        std::cout << "encoded: " << str_post << std::endl;
      curl_easy_setopt(curl, CURLOPT_URL, "http://api2.mogade.com/api/gamma/scores");
      curl_easy_setopt(curl, CURLOPT_POSTFIELDS,str_post.c_str());
      
      /* Perform the request, res will get the return code */
      res = curl_easy_perform(curl);
      
      /* always cleanup */
      curl_easy_cleanup(curl);
      printf("\n Data POST \n");
    }
  return "0";
}
